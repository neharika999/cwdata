[{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 cwdata authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Emi Tanaka. Author, maintainer.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Tanaka E (2024). cwdata: Demo Package ETC5523 Communicating Data. R package version 0.0.0.9000.","code":"@Manual{,   title = {cwdata: Demo Package for ETC5523 Communicating with Data},   author = {Emi Tanaka},   year = {2024},   note = {R package version 0.0.0.9000}, }"},{"path":"/index.html","id":"cwdata","dir":"","previous_headings":"","what":"Demo Package for ETC5523 Communicating with Data","title":"Demo Package for ETC5523 Communicating with Data","text":"goal cwdata …","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Demo Package for ETC5523 Communicating with Data","text":"can install development version cwdata GitHub :","code":"# install.packages(\"pak\") pak::pak(\"neharika999/cwdata\")"},{"path":"/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Demo Package for ETC5523 Communicating with Data","text":"basic example shows solve common problem: special using README.Rmd instead just README.md? can include R chunks like : ’ll still need render README.Rmd regularly, keep README.md --date. devtools::build_readme() handy . can also embed plots, example:  case, don’t forget commit push resulting figure files, display GitHub CRAN. vsgdvhjsffvbsjfhvjnvsv vffv vf","code":"library(cwdata) ## basic example code summary(cars) #>      speed           dist        #>  Min.   : 4.0   Min.   :  2.00   #>  1st Qu.:12.0   1st Qu.: 26.00   #>  Median :15.0   Median : 36.00   #>  Mean   :15.4   Mean   : 42.98   #>  3rd Qu.:19.0   3rd Qu.: 56.00   #>  Max.   :25.0   Max.   :120.00"},{"path":"/reference/key_crop_yields.html","id":null,"dir":"Reference","previous_headings":"","what":"Key crop yields — key_crop_yields","title":"Key crop yields — key_crop_yields","text":"dataset contains agricultural yields across crop types entity 1960 2018.","code":""},{"path":"/reference/key_crop_yields.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Key crop yields — key_crop_yields","text":"","code":"key_crop_yields"},{"path":"/reference/key_crop_yields.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Key crop yields — key_crop_yields","text":"data frame 143,825 rows 5 variables. entity Country region name code Country code (NA regions continents) year Year crop Crop type yield Yield tonnes_per_hectare","code":""},{"path":"/reference/key_crop_yields.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Key crop yields — key_crop_yields","text":"https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-09-01/key_crop_yields.csv","code":""},{"path":"/reference/stack_normalise.html","id":null,"dir":"Reference","previous_headings":"","what":"Normalise numerical vectors — stack_normalise","title":"Normalise numerical vectors — stack_normalise","text":"function takes numerical vector computes proportion. Missing values removed input vector remain output vector.","code":""},{"path":"/reference/stack_normalise.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Normalise numerical vectors — stack_normalise","text":"","code":"stack_normalise(x)"},{"path":"/reference/stack_normalise.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Normalise numerical vectors — stack_normalise","text":"x numerical vector positive values (.e. 0 greater).","code":""},{"path":"/reference/stack_normalise.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Normalise numerical vectors — stack_normalise","text":"numerical vector size proportions. sum numerical values return values add 1.","code":""},{"path":"/reference/stack_normalise.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Normalise numerical vectors — stack_normalise","text":"","code":"stack_normalise(c(10, 30, 40)) #> [1] 0.125 0.375 0.500 stack_normalise(c(75, 0, 5, 20, NA)) #> [1] 0.75 0.00 0.05 0.20   NA stack_normalise(c(NA, NA, 10)) #> [1] NA NA  1"}]
